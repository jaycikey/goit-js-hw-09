{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBAEF,IAAMC,EAAaC,OAAOP,EAAKE,cAAc,uBAAuBM,OAC9DC,EAAYF,OAAOP,EAAKE,cAAc,sBAAsBM,OAC5DE,EAAcH,OAAOP,EAAKE,cAAc,wBAAwBM,OAEtE,GAAIG,MAAML,IAAeK,MAAMF,IAAcE,MAAMD,GACjDE,EAAAd,GAASe,OAAOC,QAAQ,oCAmB1B,IAfA,IAAIC,EAAeT,EAEbU,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAIEO,EAAI,EAAGA,GAAKf,EAAae,IAChCT,EAAcS,EAAGV,GACdW,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBN,EAAAd,GAASe,OAAOe,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAEvEY,OAAM,SAAAH,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBN,EAAAd,GAASe,OAAOC,QAAQ,sBAAqCe,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAGvEH,GAAgBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n\n  const delayInput = Number(form.querySelector('input[name=\"delay\"]').value);\n  const stepInput = Number(form.querySelector('input[name=\"step\"]').value);\n  const amountInput = Number(form.querySelector('input[name=\"amount\"]').value);\n\n  if (isNaN(delayInput) || isNaN(stepInput) || isNaN(amountInput)) {\n    Notiflix.Notify.failure(\"Please enter valid numbers.\");\n    return;\n  }\n\n  let currentDelay = delayInput;\n\n  const createPromise = (position, delay) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  };\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += stepInput;\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","preventDefault","delayInput","Number","value","stepInput","amountInput","isNaN","$parcel$interopDefault","Notify","failure","currentDelay","createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.4585727b.js.map"}