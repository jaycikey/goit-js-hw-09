{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAWC,IAC/BA,EAAEC,iBAEF,MAAMC,EAAaC,OAAOP,EAAKE,cAAc,uBAAuBM,OAC9DC,EAAYF,OAAOP,EAAKE,cAAc,sBAAsBM,OAC5DE,EAAcH,OAAOP,EAAKE,cAAc,wBAAwBM,OAEtE,GAAIG,MAAML,IAAeK,MAAMF,IAAcE,MAAMD,GAEjD,YADAE,EAAAd,GAASe,OAAOC,QAAQ,+BAI1B,IAAIC,EAAeT,EAEnB,MAAMU,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,IAIb,IAAK,IAAIO,EAAI,EAAGA,GAAKf,EAAae,IAChCT,EAAcS,EAAGV,GACdW,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBN,EAAAd,GAASe,OAAOc,QAAQ,uBAAqBV,QAAiBC,MAAU,IAEzEU,OAAM,EAACX,SAAEA,EAAQC,MAAEA,MAClBN,EAAAd,GAASe,OAAOC,QAAQ,sBAAoBG,QAAeC,MAAU,IAGzEH,GAAgBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n\n  const delayInput = Number(form.querySelector('input[name=\"delay\"]').value);\n  const stepInput = Number(form.querySelector('input[name=\"step\"]').value);\n  const amountInput = Number(form.querySelector('input[name=\"amount\"]').value);\n\n  if (isNaN(delayInput) || isNaN(stepInput) || isNaN(amountInput)) {\n    Notiflix.Notify.failure(\"Please enter valid numbers.\");\n    return;\n  }\n\n  let currentDelay = delayInput;\n\n  const createPromise = (position, delay) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  };\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += stepInput;\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","delayInput","Number","value","stepInput","amountInput","isNaN","$parcel$interopDefault","Notify","failure","currentDelay","createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","i","then","success","catch"],"version":3,"file":"03-promises.52f7486e.js.map"}